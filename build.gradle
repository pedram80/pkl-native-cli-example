plugins {
    id 'java'
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.9.28'
}

group 'com.example.pkl'
version '1.0-SNAPSHOT'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.pkl-lang:pkl-core:0.28.2'
}

application {
    mainClass = 'com.example.pkl.SimplePklExample'
}

// Files needed for native image
def reflectionConfigFile = file("${projectDir}/reflection-config.json")
def resourceConfigFile = file("${projectDir}/resource-config.json")

graalvmNative {
    binaries {
        main {
            imageName = 'pkl-example'
            mainClass = 'com.example.pkl.SimplePklExample'
            
            // Arguments trying to match pkl's direct native-image command line from its buildSrc
            buildArgs.add('--initialize-at-build-time=') // Empty on purpose, as per pkl build
            // buildArgs.add('-H:+AllowDeprecatedInitializeAllClassesAtBuildTime') // Let pkl-core.jar handle this if needed
            buildArgs.add('--no-fallback')
            // buildArgs.add('--force-fallback') // Replaced by --no-fallback
            
            buildArgs.add('-H:+ReportExceptionStackTraces')
            // buildArgs.add("-H:ReflectionConfigurationFiles=${reflectionConfigFile.absolutePath}") // Keep commented, using src/main/resources/META-INF/native-image
            buildArgs.add("-H:ResourceConfigurationFiles=${resourceConfigFile.absolutePath}")
            
            // Initialize ONLY what pkl build script explicitly adds to command line for runtime init
            buildArgs.add('--initialize-at-run-time=org.msgpack.core.buffer.DirectBufferAccess')
            // ALL com.oracle.truffle.api.dsl.InlineSupport... runtime inits REMOVED from command line
            // Let pkl-core.jar's internal native-image.properties handle Truffle initializations.

            // Remove trace flags
            // buildArgs.add('--trace-class-initialization=com.oracle.truffle.api.dsl.InlineSupport$UnsafeField')
            // buildArgs.add('--trace-class-initialization=com.oracle.truffle.api.dsl.InlineSupport$ReferenceField')
            // buildArgs.add('--trace-class-initialization=com.oracle.truffle.api.dsl.InlineSupport$InlinableField')
            // buildArgs.add('--trace-class-initialization=com.oracle.truffle.api.dsl.InlineSupport$StateField')

            // Explicitly unlock experimental options
            buildArgs.add('-H:+UnlockExperimentalVMOptions')
            
            // Allow runtime errors for unsupported elements
            buildArgs.add('--report-unsupported-elements-at-runtime')
        }
    }
}

// Task to copy all dependencies to build/dependencies folder
task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/dependencies'
}

// Hook into build task
build.dependsOn copyDependencies 